// Mocks generated by Mockito 5.0.15 from annotations
// in watchnow/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i10;
import 'dart:convert' as _i30;
import 'dart:typed_data' as _i31;

import 'package:dartz/dartz.dart' as _i2;
import 'package:http/io_client.dart' as _i7;
import 'package:http/src/base_request.dart' as _i29;
import 'package:http/src/response.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i28;
import 'package:watchnow/common/failure.dart' as _i11;
import 'package:watchnow/data/datasources/db/database_helper.dart' as _i27;
import 'package:watchnow/data/datasources/movie_local_data_source.dart' as _i16;
import 'package:watchnow/data/datasources/movie_remote_data_source.dart'
    as _i14;
import 'package:watchnow/data/datasources/tv_show_local_data_source.dart'
    as _i25;
import 'package:watchnow/data/datasources/tv_show_remote_data_source.dart'
    as _i23;
import 'package:watchnow/data/models/episode_detail_model.dart' as _i6;
import 'package:watchnow/data/models/movie_detail_model.dart' as _i3;
import 'package:watchnow/data/models/movie_model.dart' as _i15;
import 'package:watchnow/data/models/movie_table.dart' as _i17;
import 'package:watchnow/data/models/season_detail_model.dart' as _i5;
import 'package:watchnow/data/models/tv_show_detail_model.dart' as _i4;
import 'package:watchnow/data/models/tv_show_model.dart' as _i24;
import 'package:watchnow/data/models/tv_show_table.dart' as _i26;
import 'package:watchnow/domain/entities/episode_detail.dart' as _i22;
import 'package:watchnow/domain/entities/movie.dart' as _i12;
import 'package:watchnow/domain/entities/movie_detail.dart' as _i13;
import 'package:watchnow/domain/entities/season_detail.dart' as _i21;
import 'package:watchnow/domain/entities/tv_show.dart' as _i19;
import 'package:watchnow/domain/entities/tv_show_detail.dart' as _i20;
import 'package:watchnow/domain/repositories/movie_repository.dart' as _i9;
import 'package:watchnow/domain/repositories/tv_show_repository.dart' as _i18;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeMovieDetailModel_1 extends _i1.Fake implements _i3.MovieDetailModel {
}

class _FakeTVShowDetailModel_2 extends _i1.Fake
    implements _i4.TVShowDetailModel {}

class _FakeSeasonDetailModel_3 extends _i1.Fake
    implements _i5.SeasonDetailModel {}

class _FakeEpisodeDetailModel_4 extends _i1.Fake
    implements _i6.EpisodeDetailModel {}

class _FakeIOStreamedResponse_5 extends _i1.Fake
    implements _i7.IOStreamedResponse {}

class _FakeResponse_6 extends _i1.Fake implements _i8.Response {}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i9.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>
      getNowPlayingMovies() => (super.noSuchMethod(
          Invocation.method(#getNowPlayingMovies, []),
          returnValue: Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
              _FakeEither_0<_i11.Failure, List<_i12.Movie>>())) as _i10
          .Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
          returnValue: Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
              _FakeEither_0<_i11.Failure, List<_i12.Movie>>())) as _i10
          .Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
              _FakeEither_0<_i11.Failure, List<_i12.Movie>>())) as _i10
          .Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i13.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
          returnValue: Future<_i2.Either<_i11.Failure, _i13.MovieDetail>>.value(
              _FakeEither_0<_i11.Failure, _i13.MovieDetail>())) as _i10
          .Future<_i2.Either<_i11.Failure, _i13.MovieDetail>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>
      getMovieRecommendations(int? id) => (super.noSuchMethod(
          Invocation.method(#getMovieRecommendations, [id]),
          returnValue: Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
              _FakeEither_0<_i11.Failure, List<_i12.Movie>>())) as _i10
          .Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
          returnValue: Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
              _FakeEither_0<_i11.Failure, List<_i12.Movie>>())) as _i10
          .Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> saveWatchlist(
          _i13.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> removeWatchlist(
          _i13.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i10.Future<bool>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>
      getWatchlistMovies() => (super.noSuchMethod(
          Invocation.method(#getWatchlistMovies, []),
          returnValue: Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>.value(
              _FakeEither_0<_i11.Failure, List<_i12.Movie>>())) as _i10
          .Future<_i2.Either<_i11.Failure, List<_i12.Movie>>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i14.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<List<_i15.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]))
          as _i10.Future<List<_i15.MovieModel>>);

  @override
  _i10.Future<List<_i15.MovieModel>> getPopularMovies() => (super.noSuchMethod(
          Invocation.method(#getPopularMovies, []),
          returnValue: Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]))
      as _i10.Future<List<_i15.MovieModel>>);

  @override
  _i10.Future<List<_i15.MovieModel>> getTopRatedMovies() => (super.noSuchMethod(
          Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]))
      as _i10.Future<List<_i15.MovieModel>>);

  @override
  _i10.Future<_i3.MovieDetailModel> getMovieDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
              returnValue:
                  Future<_i3.MovieDetailModel>.value(_FakeMovieDetailModel_1()))
          as _i10.Future<_i3.MovieDetailModel>);

  @override
  _i10.Future<List<_i15.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
              returnValue:
                  Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]))
          as _i10.Future<List<_i15.MovieModel>>);

  @override
  _i10.Future<List<_i15.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
              returnValue:
                  Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]))
          as _i10.Future<List<_i15.MovieModel>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i16.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<String> insertWatchlist(_i17.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  _i10.Future<String> removeWatchlist(_i17.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  _i10.Future<_i17.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<_i17.MovieTable?>.value())
          as _i10.Future<_i17.MovieTable?>);

  @override
  _i10.Future<List<_i17.MovieTable>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue:
                  Future<List<_i17.MovieTable>>.value(<_i17.MovieTable>[]))
          as _i10.Future<List<_i17.MovieTable>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [TVShowRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVShowRepository extends _i1.Mock implements _i18.TVShowRepository {
  MockTVShowRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>
      getOnTheAirTVShows() =>
          (super.noSuchMethod(Invocation.method(#getOnTheAirTVShows, []),
                  returnValue:
                      Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>.value(
                          _FakeEither_0<_i11.Failure, List<_i19.TVShow>>()))
              as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>
      getPopularTVShows() =>
          (super.noSuchMethod(Invocation.method(#getPopularTVShows, []),
                  returnValue:
                      Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>.value(
                          _FakeEither_0<_i11.Failure, List<_i19.TVShow>>()))
              as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>
      getTopRatedTVShows() =>
          (super.noSuchMethod(Invocation.method(#getTopRatedTVShows, []),
                  returnValue:
                      Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>.value(
                          _FakeEither_0<_i11.Failure, List<_i19.TVShow>>()))
              as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i20.TVShowDetail>> getTVShowDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVShowDetail, [id]),
              returnValue:
                  Future<_i2.Either<_i11.Failure, _i20.TVShowDetail>>.value(
                      _FakeEither_0<_i11.Failure, _i20.TVShowDetail>()))
          as _i10.Future<_i2.Either<_i11.Failure, _i20.TVShowDetail>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i21.SeasonDetail>> getSeasonDetail(
          int? id, int? seasonNumber) =>
      (super.noSuchMethod(
              Invocation.method(#getSeasonDetail, [id, seasonNumber]),
              returnValue:
                  Future<_i2.Either<_i11.Failure, _i21.SeasonDetail>>.value(
                      _FakeEither_0<_i11.Failure, _i21.SeasonDetail>()))
          as _i10.Future<_i2.Either<_i11.Failure, _i21.SeasonDetail>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i22.EpisodeDetail>> getEpisodeDetail(
          int? id, int? seasonNumber, int? episodeNumber) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getEpisodeDetail, [id, seasonNumber, episodeNumber]),
              returnValue:
                  Future<_i2.Either<_i11.Failure, _i22.EpisodeDetail>>.value(
                      _FakeEither_0<_i11.Failure, _i22.EpisodeDetail>()))
          as _i10.Future<_i2.Either<_i11.Failure, _i22.EpisodeDetail>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>
      getTVShowRecommendations(int? id) => (super.noSuchMethod(
              Invocation.method(#getTVShowRecommendations, [id]),
              returnValue:
                  Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>.value(
                      _FakeEither_0<_i11.Failure, List<_i19.TVShow>>()))
          as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>> searchTVShows(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTVShows, [query]),
              returnValue:
                  Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>.value(
                      _FakeEither_0<_i11.Failure, List<_i19.TVShow>>()))
          as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> saveWatchlist(
          _i20.TVShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tvShow]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> removeWatchlist(
          _i20.TVShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvShow]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i10.Future<bool>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>
      getWatchlistTVShows() =>
          (super.noSuchMethod(Invocation.method(#getWatchlistTVShows, []),
                  returnValue:
                      Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>.value(
                          _FakeEither_0<_i11.Failure, List<_i19.TVShow>>()))
              as _i10.Future<_i2.Either<_i11.Failure, List<_i19.TVShow>>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [TVShowRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVShowRemoteDataSource extends _i1.Mock
    implements _i23.TVShowRemoteDataSource {
  MockTVShowRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<List<_i24.TVShowModel>> getOnTheAirTVShows() =>
      (super.noSuchMethod(Invocation.method(#getOnTheAirTVShows, []),
              returnValue:
                  Future<List<_i24.TVShowModel>>.value(<_i24.TVShowModel>[]))
          as _i10.Future<List<_i24.TVShowModel>>);

  @override
  _i10.Future<List<_i24.TVShowModel>> getPopularTVShows() =>
      (super.noSuchMethod(Invocation.method(#getPopularTVShows, []),
              returnValue:
                  Future<List<_i24.TVShowModel>>.value(<_i24.TVShowModel>[]))
          as _i10.Future<List<_i24.TVShowModel>>);

  @override
  _i10.Future<List<_i24.TVShowModel>> getTopRatedTVShows() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTVShows, []),
              returnValue:
                  Future<List<_i24.TVShowModel>>.value(<_i24.TVShowModel>[]))
          as _i10.Future<List<_i24.TVShowModel>>);

  @override
  _i10.Future<_i4.TVShowDetailModel> getTVShowDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVShowDetail, [id]),
              returnValue: Future<_i4.TVShowDetailModel>.value(
                  _FakeTVShowDetailModel_2()))
          as _i10.Future<_i4.TVShowDetailModel>);

  @override
  _i10.Future<_i5.SeasonDetailModel> getSeasonDetail(
          int? tvShowId, int? seasonNumber) =>
      (super.noSuchMethod(
              Invocation.method(#getSeasonDetail, [tvShowId, seasonNumber]),
              returnValue: Future<_i5.SeasonDetailModel>.value(
                  _FakeSeasonDetailModel_3()))
          as _i10.Future<_i5.SeasonDetailModel>);

  @override
  _i10.Future<_i6.EpisodeDetailModel> getEpisodeDetail(
          int? tvShowId, int? seasonNumber, dynamic episodeNumber) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getEpisodeDetail, [tvShowId, seasonNumber, episodeNumber]),
              returnValue: Future<_i6.EpisodeDetailModel>.value(
                  _FakeEpisodeDetailModel_4()))
          as _i10.Future<_i6.EpisodeDetailModel>);

  @override
  _i10.Future<List<_i24.TVShowModel>> getTVShowRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVShowRecommendations, [id]),
              returnValue:
                  Future<List<_i24.TVShowModel>>.value(<_i24.TVShowModel>[]))
          as _i10.Future<List<_i24.TVShowModel>>);

  @override
  _i10.Future<List<_i24.TVShowModel>> searchTVShows(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTVShows, [query]),
              returnValue:
                  Future<List<_i24.TVShowModel>>.value(<_i24.TVShowModel>[]))
          as _i10.Future<List<_i24.TVShowModel>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [TVShowLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVShowLocalDataSource extends _i1.Mock
    implements _i25.TVShowLocalDataSource {
  MockTVShowLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<String> insertWatchlist(_i26.TVShowTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  _i10.Future<String> removeWatchlist(_i26.TVShowTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  _i10.Future<_i26.TVShowTable?> getTVShowById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVShowById, [id]),
              returnValue: Future<_i26.TVShowTable?>.value())
          as _i10.Future<_i26.TVShowTable?>);

  @override
  _i10.Future<List<_i26.TVShowTable>> getWatchlistTVShows() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTVShows, []),
              returnValue:
                  Future<List<_i26.TVShowTable>>.value(<_i26.TVShowTable>[]))
          as _i10.Future<List<_i26.TVShowTable>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i27.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i28.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: Future<_i28.Database?>.value())
          as _i10.Future<_i28.Database?>);

  @override
  _i10.Future<int> insertMovieWatchlist(_i17.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertMovieWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i10.Future<int>);

  @override
  _i10.Future<int> removeMovieWatchlist(_i17.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeMovieWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i10.Future<int>);

  @override
  _i10.Future<int> insertTVShowWatchlist(_i26.TVShowTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#insertTVShowWatchlist, [tvShow]),
          returnValue: Future<int>.value(0)) as _i10.Future<int>);

  @override
  _i10.Future<int> removeTVShowWatchlist(_i26.TVShowTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeTVShowWatchlist, [tvShow]),
          returnValue: Future<int>.value(0)) as _i10.Future<int>);

  @override
  _i10.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i10.Future<Map<String, dynamic>?>);

  @override
  _i10.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i10.Future<List<Map<String, dynamic>>>);

  @override
  _i10.Future<Map<String, dynamic>?> getTVShowById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVShowById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i10.Future<Map<String, dynamic>?>);

  @override
  _i10.Future<List<Map<String, dynamic>>> getWatchlistTVShows() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTVShows, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i10.Future<List<Map<String, dynamic>>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOClient extends _i1.Mock implements _i7.IOClient {
  MockIOClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i7.IOStreamedResponse> send(_i29.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: Future<_i7.IOStreamedResponse>.value(
                  _FakeIOStreamedResponse_5()))
          as _i10.Future<_i7.IOStreamedResponse>);

  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);

  @override
  _i10.Future<_i8.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i8.Response>.value(_FakeResponse_6()))
          as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i8.Response>.value(_FakeResponse_6()))
          as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i30.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i8.Response>.value(_FakeResponse_6()))
          as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i30.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i8.Response>.value(_FakeResponse_6()))
          as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i30.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i8.Response>.value(_FakeResponse_6()))
          as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i30.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i8.Response>.value(_FakeResponse_6()))
          as _i10.Future<_i8.Response>);

  @override
  _i10.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  _i10.Future<_i31.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i31.Uint8List>.value(_i31.Uint8List(0)))
          as _i10.Future<_i31.Uint8List>);

  @override
  String toString() => super.toString();
}
